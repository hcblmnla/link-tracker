app:
  telegram-token: ${TELEGRAM_TOKEN} # env variable
  message-transport: HTTP # {HTTP, Kafka}

kafka:
  topic-name: link-updates
  dlq-topic-name: link-updates-dlt
  dlq-partitions: 1
  dlq-replicas: 1
  bootstrap-servers: ${KAFKA_URL:localhost:9092}
  group-id: message-group
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  key-serializer: org.apache.kafka.common.serialization.StringSerializer
  value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring:
  application:
    name: Bot
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  cache:
    type: redis
    redis:
      time-to-live: 1h
      cache-null-values: false
      key-prefix: "bot:"
      use-key-prefix: true
  data:
    redis:
      host: localhost
      port: 6379
  kafka:
    admin:
      auto-create: false
    consumer:
      properties:
        spring.json.type.mapping: >
          LinkUpdate: backend.academy.base.schema.bot.LinkUpdate
        spring.json.trusted.packages: backend.academy.base.schema.bot

server:
  port: 8080
  base-url: http://localhost:8081/

client:
  timeout: 10s
  retry:
    max-attempts: 5
    min-backoff: 2s
    retryable-statuses:
      - 500
      - 502
      - 503
      - 504
  cb:
    sliding-window-size: 1
    minimum-required-calls: 1
    failure-rate-threshold: 100  # OPEN
    permitted-calls-in-half-open-state: 1
    wait-duration-in-open-state: 1s
    name: web-client-circuit-breaker

rate-limit:
  for-period: 10
  refresh-period: 1s
  timeout: 500ms
  rate-limiter: ip-based-rate-limiter

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui

logging.structured.format.file: ecs
logging.file.name: log.json

descriptions:
  help: "возвращает лист доступных команд"
  list: "возвращает лист отслеживаемых ссылок"
  start: "запускает бота и вводит в курс дела"
  track: "начинает отслеживание ссылки"
  untrack: "прекращает отслеживание ссылки"
  addtag: "добавляет тег"
  tags: "возвращает лист тегов"
  digest: "режим уведомлений – дайджест раз в сутки (10-00)"
  instant: "режим уведомлений – сразу"

management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus
      path-mapping:
        prometheus:
          /metrics
  server:
    port: 8090
